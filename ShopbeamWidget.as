package {import flash.utils.*;import flash.system.*;import flash.net.*;import flash.external.*;import flash.display.*;import flash.events.*;import fl.transitions.easing.*;import fl.transitions.Tween;import flash.globalization.CurrencyFormatter;public class ShopbeamWidget extends MovieClip {  public function ShopbeamWidget() {    stage.align = StageAlign.TOP_LEFT;    stage.scaleMode = StageScaleMode.NO_SCALE;    var brandName = widgetInfo.brandName;    var productName = widgetInfo.productName;    var listPrice = widgetInfo.listPrice;    var salePrice = widgetInfo.salePrice;    var strikeThrough = widgetInfo.strikeThrough;    brandName.alpha = 0;    productName.alpha = 0;    listPrice.alpha = 0;    salePrice.alpha = 0;    var bagActive:Sprite = hoverMovie.bagActive;    var bagInactive:Sprite = hoverMovie.bagInactive;    var button:Sprite = new Sprite();    var SHOP_HERE_TWEEN_X:int = stage.stageWidth - (hoverMovie.width - bagActive.width);    var SHOP_HERE_INITIAL_X:int = stage.stageWidth;    function tweenTo(object:DisplayObject, property:String, value:*, duration:int = 30, durationInSeconds:Boolean = false):Tween {      return new Tween(object, property, Strong.easeOut, object[property], value, 30);    }    function tweenAlpha(object:DisplayObject, opacity:Number, duration:int = 30, durationInSeconds:Boolean = false):Tween {      return tweenTo(object, 'alpha', opacity, duration, durationInSeconds);    }    function fadeIn(object:DisplayObject, duration:int = 30, durationInSeconds:Boolean = false):void {      tweenAlpha(object, 1, duration, durationInSeconds)    }    function fadeOut(object:DisplayObject, duration:int = 30, durationInSeconds:Boolean = false):void {      tweenAlpha(object, 0, duration, durationInSeconds)    }    function alignToStageCenter(object:DisplayObject, property:String) {      var propertyMap = {        x: 'stageWidth',        y: 'stageHeight'      };      object[property] = (stage[propertyMap[property]] / 2);    }    function fullSize(object:DisplayObject):void {      object.width = stage.stageWidth;      object.height = stage.stageHeight;    }    var fullStageObjects = [hoverArea, backdrop];//    var alignedObjects = [brandName, productName, listPrice, salePrice, strikeThrough];    fullStageObjects.forEach(function(object:DisplayObject, index:int, array:Array):void {      fullSize(object);    });    alignToStageCenter(widgetInfo, 'x');    widgetInfo.y = stage.stageHeight * 0.30;    hoverMovie.y = stage.stageHeight;    hoverMovie.x = SHOP_HERE_INITIAL_X;    hoverArea.addEventListener(MouseEvent.MOUSE_OVER, function(event:MouseEvent):void {      fadeIn(listPrice);      if (listPrice.text !== salePrice.text) {        fadeIn(strikeThrough);        fadeIn(salePrice);      }      fadeIn(brandName);      fadeIn(productName);      fadeIn(bagActive);      fadeOut(bagInactive);      tweenAlpha(backdrop, 0.6);      tweenTo(hoverMovie, 'x', SHOP_HERE_TWEEN_X);    });    hoverArea.addEventListener(MouseEvent.MOUSE_OUT, function(event:MouseEvent):void {      fadeOut(salePrice);      fadeOut(listPrice);      fadeOut(strikeThrough);      fadeOut(brandName);      fadeOut(productName);      fadeOut(bagActive);      fadeIn(bagInactive);      fadeOut(backdrop);      tweenTo(hoverMovie, 'x', SHOP_HERE_INITIAL_X);    });    function log():void {      ExternalInterface.call('console.log', arguments.join(' '));    }    function logError():void {      ExternalInterface.call('console.error', arguments.join(' '));    }    function executeJS(js):void {      var wrapped = 'try {\n' + js + '\n}catch(err){console.error(err);console.error(err.stack);}';      ExternalInterface.call('eval', wrapped);    }    Security.allowDomain('*');    var widgetUuid:String = stage.loaderInfo.parameters.widgetUuid;    var loader:Loader = new Loader();    var widgetData:Object;    ExternalInterface.addCallback('setWidgetData', function setWidgetData(data:String):void {      widgetData = JSON.parse(data);      brandName.text = widgetData.initialProduct.brandName;      productName.text = widgetData.initialProduct.name;      var dollarFormatter:CurrencyFormatter = new CurrencyFormatter('usd');      listPrice.text = dollarFormatter.format((widgetData.initialVariant.listPrice / 100), true);      //strikeThrough.width ...      salePrice.text = dollarFormatter.format((widgetData.initialVariant.salePrice / 100), true);    });    button.addChild(loader);    //required for `.useHandCursor` to work    hoverArea.buttonMode = true;    hoverArea.useHandCursor = true;    addChild(button);    setChildIndex(button, 0);    function loadingError(e:IOErrorEvent):void {      logError('widget with id: ' + widgetUuid + ' failed to load image');    }    loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, loadingError);    function doneLoad(e:Event):void {      fullSize(button);      fullSize(loader);      loader.contentLoaderInfo.removeEventListener(Event.COMPLETE, doneLoad);      loader.contentLoaderInfo.removeEventListener(IOErrorEvent.IO_ERROR, loadingError);    }    loader.contentLoaderInfo.addEventListener(Event.COMPLETE, doneLoad);    function loaderClickHandler(e:Event):void {      log('widgetOpenLightbox' + widgetUuid);      executeJS("Shopbeam.swfOpenLightbox('" + widgetUuid + "')");    }    hoverArea.addEventListener(MouseEvent.CLICK, loaderClickHandler);    log('loading image: ' + stage.loaderInfo.parameters.imageUrl);    loader.load(new URLRequest(stage.loaderInfo.parameters.imageUrl));  }}}